# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.package_name import PackageName  # noqa: F401,E501
from swagger_server.models.semver_range import SemverRange  # noqa: F401,E501
from swagger_server import util


class PackageQuery(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, version: SemverRange=None, name: PackageName=None):  # noqa: E501
        """PackageQuery - a model defined in Swagger

        :param version: The version of this PackageQuery.  # noqa: E501
        :type version: SemverRange
        :param name: The name of this PackageQuery.  # noqa: E501
        :type name: PackageName
        """
        self.swagger_types = {
            'version': SemverRange,
            'name': PackageName
        }

        self.attribute_map = {
            'version': 'Version',
            'name': 'Name'
        }
        self._version = version
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'PackageQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PackageQuery of this PackageQuery.  # noqa: E501
        :rtype: PackageQuery
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self) -> SemverRange:
        """Gets the version of this PackageQuery.


        :return: The version of this PackageQuery.
        :rtype: SemverRange
        """
        return self._version

    @version.setter
    def version(self, version: SemverRange):
        """Sets the version of this PackageQuery.


        :param version: The version of this PackageQuery.
        :type version: SemverRange
        """

        self._version = version

    @property
    def name(self) -> PackageName:
        """Gets the name of this PackageQuery.


        :return: The name of this PackageQuery.
        :rtype: PackageName
        """
        return self._name

    @name.setter
    def name(self, name: PackageName):
        """Sets the name of this PackageQuery.


        :param name: The name of this PackageQuery.
        :type name: PackageName
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name
